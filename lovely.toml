[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# for cosmic collapse:
# Add `kcv_cosmic_collapse_calculate` field to context,
# as context.after is too broad as the sole flag and can cause excessive triggers.
[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = "G.FUNCS.draw_from_hand_to_discard()"
position = 'before'
match_indent = true
payload = '''

for i, joker_card in ipairs(G.jokers.cards) do
    joker_card:calculate_joker({kcv_cosmic_collapse_calculate=true})
end
delay(0.3)

'''

# add `kcv_juice_card_until` field to context.individual return object
# Provides an appropriate timeslot to call juice_card_until during  context.individual
[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = "if effects[ii].extra then"
position = 'before'
match_indent = true
payload = '''

if effects[ii].kcv_juice_card_until then
    G.E_MANAGER:add_event(Event({
        trigger = 'immediate',
        func = function()
            local eval = function(card)
                return true
            end
            juice_card_until(effects[ii].card, eval, true)
            return true
        end
    }))
end

'''

# Luck of the Irish (mult effect)
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = "if pseudorandom('lucky_mult') < G.GAME.probabilities.normal/5 then"
position = 'at'
match_indent = true
payload = '''

local kcv_irish_factor = 1
if self:is_suit("Clubs") then
    for i, joker in ipairs(G.jokers.cards) do
        if joker.ability.name == 'Luck of the Irish' then
            kcv_irish_factor = kcv_irish_factor * 4
        end
    end
end
if pseudorandom('lucky_mult') < (G.GAME.probabilities.normal * kcv_irish_factor)/5 then

'''

# Luck of the Irish (money effect)
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = "if pseudorandom('lucky_money') < G.GAME.probabilities.normal/15 then"
position = 'at'
match_indent = true
payload = '''

local kcv_irish_factor = 1
if self:is_suit("Clubs") then
    for i, joker in ipairs(G.jokers.cards) do
        if joker.ability.name == 'Luck of the Irish' then
            kcv_irish_factor = kcv_irish_factor * 4
        end
    end
end
if pseudorandom('lucky_money') < (G.GAME.probabilities.normal * kcv_irish_factor)/15 then

'''

# Five-Day Forecast must rank-up cards *before* context.before runs so other jokers can get updated ranks
[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = "local hand_text_set = false"
position = 'after'
match_indent = true
payload = '''

    for kcv_i, kcv_joker in ipairs(G.jokers.cards) do
        kcv_joker:calculate_joker({scoring_hand = scoring_hand, poker_hands = poker_hands, kcv_forecast_event = true})
    end

'''

# Five-Day Forecast: add kcv_dont_update_sprites
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = "function Card:set_base(card, initial)"
position = 'at'
match_indent = true
payload = '''

function Card:set_base(card, initial, kcv_dont_update_sprites)

'''

# Five-Day Forecast: use kcv_dont_update_sprites
[[patches]]
[patches.pattern]
target = 'card.lua'
pattern = "if next(card) then"
position = 'at'
match_indent = true
payload = '''

if next(card) and not kcv_dont_update_sprites then

'''

# Composition: allow scoring both mult and chips at once
[[patches]]
[patches.pattern]
target = 'functions/state_events.lua'
pattern = "if effects.jokers then"
position = 'at'
match_indent = true
payload = '''

if effects.jokers and effects.jokers.kcv_composition then
    hand_chips = mod_chips(hand_chips + effects.jokers.kcv_composition.kcv_chips)
    update_hand_text({delay = 0}, {chips = hand_chips})
    card_eval_status_text(effects.jokers.kcv_composition.kcv_card, 'chips', effects.jokers.kcv_composition.kcv_chips, percent)

    mult = mod_mult(mult + effects.jokers.kcv_composition.kcv_mult)
    update_hand_text({delay = 0}, {mult = mult})
    card_eval_status_text(effects.jokers.kcv_composition.kcv_card, 'h_mult', effects.jokers.kcv_composition.kcv_mult, percent)
end

if effects.jokers and not effects.jokers.kcv_composition then

'''
